dnrec_colors <- c(
`golden yellow`= "#FCC917",
`sky blue`= "#ACE1F9",
`blue skies`= "#5DAED8",
`blue waves` = "#00669E",
`moss green`= "#75A38C",
`light green`= "#4D8E42",
`dnrec green`= "#336633",
`black` = "#000000",
`forest green` ="#007854",
`sand tan`= "#DDCBA4",
`sunny orange` = "#FCAB4F",
`orange` = "#FA873D",
`park sign brown`= "#693F23",
`bark brown`= "#31261D",
`bayshore brick`= "#8A482F",
`gray` = "#D4D6D9",
`enforce gold` ="#DBAD6B",
`bayshore dkgreen`= "#535A27",
`bayshore green` ="#818C37")
## Function that returns hex code when name is entered
dnrec_cols <- function(...) {
cols <- c(...)
if (is.null(cols))
return (dnrec_colors)
dnrec_colors[cols]
}
dnrec_colors <- c(
`golden yellow`= "#FCC917",
`sky blue`= "#ACE1F9",
`blue skies`= "#5DAED8",
`blue waves` = "#00669E",
`moss green`= "#75A38C",
`light green`= "#4D8E42",
`dnrec green`= "#336633",
`black` = "#000000",
`forest green` ="#007854",
`sand tan`= "#DDCBA4",
`sunny orange` = "#FCAB4F",
`orange` = "#FA873D",
`park sign brown`= "#693F23",
`bark brown`= "#31261D",
`bayshore brick`= "#8A482F",
`gray` = "#D4D6D9",
`enforcement gold` ="#DBAD6B",
`bayshore dark green`= "#535A27",
`bayshore green` ="#818C37")
## Function that returns hex code when name is entered
dnrec_cols <- function(...) {
cols <- c(...)
if (is.null(cols))
return (dnrec_colors)
dnrec_colors[cols]
}
devtools::document()
rm(list = c("dnrec_colors", "dnrec_cols"))
document()
devtools::document()
devtools::document()
??col2rgb
??rgb
dnrec_pals <- list(
## The 8 brand colors
`brand` = c("#FCC917",
"#ACE1F9",
"#5DAED8",
"#00669E",
"#75A38C",
"#4D8E42",
"#336633",
"#000000"),
## The 3 secondary colors
`secondary` = c("#0D7046",
"#DDCBA4",
"#FCAB4F"),
## The 8 tertiary colors
`tertiary`= c("#FA873D",
"#693F23",
"#31261D",
"#8A482F",
"#D4D6D9",
"#DBAD6B",
"#535A27",
"#818C37"),
## The 8 primary brand colors, plus the secondary colors. A total of 11 colors.
`extended`=c("#FCC917",
"#ACE1F9",
"#5DAED8",
"#00669E",
"#75A38C",
"#4D8E42",
"#336633",
"#000000","#0D7046",
"#DDCBA4",
"#FCAB4F"),
## A mixture of colors from the branding guide. A total of 8 colors.
## Intended to be easier for viewers to differeniate, while still maintaining DNREC brand standards
`mix` = c("#D4D6D9", "#FCAB4F","#ACE1F9","#75A38C","#FCC917","#00669E","#FA873D", "#000000")
)
dnrec_pal <- function(palette="brand", alpha = 1,...){
pal <- dnrec_pals[[palette]]
if (alpha > 1L | alpha <= 0L) stop("alpha must be in (0, 1]")
raw_cols_rgb <- col2rgb(pal)
alpha_cols <- rgb(
raw_cols_rgb[1L, ], raw_cols_rgb[2L, ], raw_cols_rgb[3L, ],
alpha = alpha * 255L, names = names(pal),
maxColorValue = 255L
)
manual_pal(unname(alpha_cols))
}
devtools::document()
devtools::document()
dnrec_pal <- function(palette="brand", alpha = 1,...){
pal <- dnrec_pals[[palette]]
if (alpha > 1L | alpha <= 0L) stop("alpha must be in (0, 1]")
raw_cols_rgb <- col2rgb(pal)
alpha_cols <- rgb(
raw_cols_rgb[1L, ], raw_cols_rgb[2L, ], raw_cols_rgb[3L, ],
alpha = alpha * 255L, names = names(pal),
maxColorValue = 255L
)
manual_pal(unname(alpha_cols))
}
use_mit_license("Brittney Flaten")
library(license)
??license
library(usethis)
use_mit_license("Brittney Flaten")
dnrec_scale_color <- function(palette="brand", alpha=1,...){
pal <- dnrec_pal(palette=palette)
discrete_scale("colour", "dnrec", dnrec_pal(palette, alpha), ...)
}
use_r("dnrec_cols")
use_r("dnrec_pal")
use_r("dnrec_scale_fill")
use_r("dnrec_scale_color")
load_all()
??load_all
library(devtools)
load_all()
??discrete_scale
dnrec_scale_fill <- function(palette = "brand", alpha = 1, ...) {
pal <- dnrec_pal(palette=palette)
ggplot2::discrete_scale("fill", "dnrec", dnrec_pal(palette, alpha), ...)
}
use_r("dnrec_scale_fill")
dnrec_scale_color <- function(palette="brand", alpha=1,...){
pal <- dnrec_pal(palette=palette)
ggplot2::discrete_scale("colour", "dnrec", dnrec_pal(palette, alpha), ...)
}
use_r("dnrec_scale_color")
load_all()
document()
use_r("colors_list")
use_r("palette_list")
use_r("scales_list")
document()
load_all()
document()
dnrec_cols("bayshore green")
dnrec_cols("bayshore green", "golden yellow")
data("iris")
force(iris)
ggplot(data=iris, aes(x=Species, fill=Species))+ geom_histogram()+scale_fill_dnrec()
library(ggplot2)
ggplot(data=iris, aes(x=Species, fill=Species))+ geom_histogram()+scale_fill_dnrec()
load_all()
ggplot(data=iris, aes(x=Species, fill=Species))+ geom_histogram()+scale_fill_dnrec()
ggplot(data=iris, aes(x=Species, fill=Species))+ geom_histogram()+scale_fill_dnrec()
ggplot(data=iris, aes(x=Species, fill=Species))+ geom_histogram()+dnrec_scale_fill()
library(scales)
#' Color palettes based on DNREC Brand and Editorial Style Guide
#'
#' @param palette Character name of palette from the list of palettes.
#' @param alpha Numeric from 0 to 1 representing transparency.
#' @param ... Additional arguments
#'
#' @return Palettes to be used in scale functions.
#'
#'
dnrec_pal <- function(palette="brand", alpha = 1,...){
pal <- dnrec_pals[[palette]]
if (alpha > 1L | alpha <= 0L) stop("alpha must be in (0, 1]")
raw_cols_rgb <- col2rgb(pal)
alpha_cols <- rgb(
raw_cols_rgb[1L, ], raw_cols_rgb[2L, ], raw_cols_rgb[3L, ],
alpha = alpha * 255L, names = names(pal),
maxColorValue = 255L
)
scales::manual_pal(unname(alpha_cols))
}
use_r("dnrec_pal")
load_all()
rm(list = c("dnrec_pal"))
load_all
load_all()
ggplot(data=iris, aes(x=Species, fill=Species))+ geom_histogram()+dnrec_scale_fill()
ggplot(data=iris, aes(x=Species, fill=Species))+ geom_histogram(stat="count")+dnrec_scale_fill()
ggplot(data=iris, aes(x=Sepal.Length, fill=Species))+geom_histogram()+dnrec_scale_fill()
document()
ggplot(data=iris, aes(x=Sepal.Length, fill=Species))+geom_histogram()+dnrec_scale_fill(palette="mix")
ggplot(data=iris, aes(x=Sepal.Length, y=Sepal.Width, color=Species))+geom_point(size=3)+dnrec_scale_color("tertiary")
document()
document()
document
document()
load_all()
document()
use_data(dnrec_colors)
use_data(dnrec_colors)
use_data(dnrec_colors, overwrite = T)
use_data(dnrec_pals)
document()
use_data(dnrec_pals, overwrite=T)
use_data(dnrec_colors, overwrite=T)
document()
use_data(dnrec_pals, overwrite=T)
use_data(dnrec_colors, overwrite=T)
document()
use_r(dnrec_cols)
use_r("dnrec_cols")
load_all()
use_r(dnrec_scale_fill())
use_r("dnrec_scale_fill")
use_r("dnrec_scale_color")
ggplot(iris, aes(Species, fill=Species))+
#' geom_histogram(stat="count")+dnrec_scale_fill()
ggplot(iris, aes(Species, fill=Species))+
#' geom_histogram(stat="count")+dnrec_scale_fill()
ggplot(iris, aes(Species, fill=Species))+geom_histogram(stat="count")+dnrec_scale_fill()
ggplot(iris, aes(x=Species, fill=Species))+
geom_histogram(stat="count")+dnrec_scale_fill()
ggplot(iris, aes(Species, fill=Species))+
#' geom_histogram(stat="count")+dnrec_scale_fill()
ggplot(iris, aes(x=Species, fill=Species))+
geom_histogram(stat="count")+dnrec_scale_fill()
ggplot(iris, aes(Species, fill=Species))+
geom_histogram(stat="count")+dnrec_scale_fill()
use_r("dnrec_scale_fill")
document()
use_r("dnrec_scale_color")
document()
load_all()
document()
library(roxygen2)
roxygenise("dnrec_scale_color")
library(DNRECcolors)
dnrec_cols("golden yellow")
#' Obtain color hex code
#'
#' @param ... color name or names in the Guide. Do not use capital letters.
#'
#' @return hex code or hex codes
#'
#' @examples
#' dnrec_cols("bayshore green", "bayshore brick", "blue skies")
#'
dnrec_cols <- function(...) {
cols <- c(...)
if (is.null(cols))
return (dnrec_colors)
dnrec_colors[cols]
}
use_r("dnrec_cols")
load_all()
m(list = c("dnrec_cols"))
rm(list = c("dnrec_cols"))
load_all()
dnrec_cols("golden yellow")
document()
library(devtools)
library(roxygen2)
library(devtools)
library(roxygen2)
??use_r
load_all()
document()
library(DNRECcolors)
dnrec_cols("golden yellow")
#' Obtain color hex code
#'
#' @param ... color name or names in the Guide. Do not use capital letters.
#'
#' @return hex code or hex codes
#'
#' @examples
#' dnrec_cols("bayshore green", "bayshore brick", "blue skies")
#'
dnrec_cols <- function(...) {
cols <- c(...)
if (is.null(cols))
return (dnrec_colors)
dnrec_colors[cols]
}
dnrec_cols()
#' Obtain color hex code
#'
#' @param ... color name or names in the Guide. Do not use capital letters.
#'
#' @return hex code or hex codes
#'
#' @examples
#' dnrec_cols("bayshore green", "bayshore brick", "blue skies")
#'
dnrec_cols <- function(color) {
cols <- c(color)
if (is.null(cols))
return (dnrec_colors)
dnrec_colors[cols]
}
dnrec_cols("golden yellow")
use_r("dnrec_cols")
document()
Load_all()
load_all()
library(DNRECcolors)
library(DNRECcolors)
use_r("dnrec_cols")
document()
library(DNRECcolors)
library(usethis)
library(devtools)
library(roxygen2)
use_r("dnrec_cols")
load_all()
use_r("dnrec_cols")
document()
document()
document()
use_r("dnrec_scale_fill")
document()
use_r("dnrec_scale_color")
document()
library(DNRECcolors)
dnrec_cols("golden yellow", "moss green")
use_r("dnrec_cols")
document()
document()
use_r("dnrec_scale_fill")
use_r("dnrec_scale_color")
document()
use_r("dnrec_pal")
document()
use_r("dnrec_pal")
document()
use_r("dnrec_pal")
document()
library(DNRECcolors)
dnrec_colors
library(pacman)
p_load(devtools, roxygen2)
document()
document
document()
document()
use_data("dnrec_colors")
load_all()
use_data("dnrec_colors")
load("~/Documents/R_Stuff/DNRECcolors/data/dnrec_colors.rda")
View(dnrec_colors)
file.exists("~/.ssh/id_rsa.pub")
document()
document()
library(DNRECcolors)
document()
